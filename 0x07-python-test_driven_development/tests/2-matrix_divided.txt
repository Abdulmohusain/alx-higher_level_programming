This is documentaion 2-divide matrix

divide_matrix divides a 2d array by div 

	>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Test for zero division error
Create your matrix

	>>> matrix = [
	...	[1, 2, 3],
	...	[4, 5, 6]
	... ]
	>>> matrix_divided(matrix, 0)
	Traceback (most recent call last):
	ZeroDivisionError: division by zero

Test for type error
  	>>> matrix_divided("matrix", 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats
  	
	>>> matrix_divided(matrix, 'e')
	Traceback (most recent call last):
	TypeError: div must be a number
	
	>>> matrix = [
	...	[1, 2],
	...	[4, 5, 6]
	... ]
  	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size

	>>> matrix = [
	...	23,
	...	[4, 5, 6]
	... ]
	>>> matrix_divided(matrix, 4)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix = [
	...	[1, 2, 'a'],
	...	[4, 5, 6]
	... ]
	>>> matrix_divided(matrix, 5)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Test for None values
	>>> matrix_divided(None, 5)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided(None, None)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats
	
	>>> matrix_divided(matrix, None)
	Traceback (most recent call last):
	TypeError: div must be a number

Test for valid values
	 
	>>> matrix = [
	...	[1, 2, 3],
	...	[4, 5, 6]
	... ]
	>>> matrix_divided(matrix, 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

	>>> matrix = [
	...	[1, 2, 3],
	...	[4, 5, 6]
	... ]
	>>> matrix_divided(matrix, 3.4)
	[[0.29, 0.59, 0.88], [1.18, 1.47, 1.76]]

	>>> matrix = [
	...	[1.0, 2.0, 3],
	...	[4, 5.0, 6.0]
	... ]
	>>> matrix_divided(matrix, 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]


