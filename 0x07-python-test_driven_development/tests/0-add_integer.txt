This is a test and documentation for add module

First import the add module

	>>> add_integer = __import__("0-add_integer").add_integer

Test for positive and ngative integers
	>>> add_integer(2, 3)
	5
	>>> add_integer(-1, 0)
	-1
	>>> add_integer(2, -1)
	1
	>>> add_integer(0, 0)
	0
	>>> add_integer(2.0, 0.5)
	2
	>>> add_integer(-2.6, 2.4)
	0
	>>> add_integer(2.2, -1.9)
	1
	>>> add_integer(1, 2.9)
	3
	>>> add_integer(float("nan"), 2.9)
	Traceback (most recent call last):
	ValueError: cannot convert float NaN to integer

	>>> add_integer(1, float('inf'))
	Traceback (most recent call last):
	OverflowError: cannot convert float infinity to integer

Test for other data types
	
	>>> add_integer("asd", 3)
	Traceback (most recent call last):
		...
	TypeError: a must be an integer

	>>> add_integer(3, "asd")
	Traceback (most recent call last):
	TypeError: b must be an integer
	
	>>> add_integer("asd", "qww")
	Traceback (most recent call last):
	TypeError: a must be an integer
		
	>>> add_integer("asd", 3)
	Traceback (most recent call last):
	TypeError: a must be an integer

	>>> add_integer(2)
	100

	>>> add_integer()
	Traceback (most recent call last):
	TypeError: add_integer() missing 1 required positional argument: 'a'
